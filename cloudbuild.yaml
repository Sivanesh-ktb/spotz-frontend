timeout: '1200s'

steps:
  # Step 1: Set Up SSH Authentication
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Setting up SSH authentication..."
        mkdir -p /root/.ssh
        echo "${_SSH_PRIVATE_KEY}" | base64 --decode > /root/.ssh/id_rsa
        chmod 600 /root/.ssh/id_rsa
        echo "SSH setup complete."

  # Step 2: Transfer Files to Target Instance via Load Balancer
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Copying files to the target instance..."
        gcloud compute scp --recurse ./dist/* ubuntu@${_LB_INSTANCE_NAME}:/opt/nodejs/spotz-frontend --zone=${_ZONE}
        echo "Files copied successfully."

  # Step 3: Execute Deployment Commands on Target Instance
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Deploying application on the target instance..."
        gcloud compute ssh ubuntu@${_LB_INSTANCE_NAME} --zone=${_ZONE} --command="\
          cd /opt/nodejs/spotz-frontend && \
          git pull && \
          cp /opt/nodejs/config/environment.demo /opt/nodejs/spotz-frontend/src/environments/environment.ts && \
          npm install && \
          npm run build \
        "
        echo "Deployment completed successfully."

substitutions:
  _PROJECT_ID: "lyrical-beach-439615-f1"
  _LB_INSTANCE_NAME: "test"  # Replace with the actual instance name
  _ZONE: "us-central1-c"
  _SSH_PRIVATE_KEY: > 
    LS0tLS1CRUdJTiB... # Base64-encoded private SSH key

logsBucket: "spotzbuildlogs"

options:
  logging: GCS_ONLY  # Logs will only be available in Google Cloud Storage
